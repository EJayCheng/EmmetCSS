/* 
  Emmet CSS lib(include css reset)
  v1.2.12 | 2017-09-30 EJay - add top, left, bottom, right, etc
  v1.2.11 | 2017-08-04 EJay - remove useless class
  v1.2.8 | 2017-06-04 EJay - add pointer-event
  v1.2.7 | 2017-04-07 EJay - add function: omitContent
  v1.2.6 | 2017-03-24 EJay - modify html, body. remove font-size: 14px
  v1.2.5 | 2016-12-27 EJay - modify CIS color & add _mixin.scss
  v1.2.4 | 2016-12-26 EJay - modify something css class. ex: html, body
  v1.2.3 | 2016-12-26 EJay - add something css class. ex: .flex-col
  v1.2.2 | 2016-11-21 EJay - add something css class. ex: .vv, .vh, .cur
  v1.1.0 | 2016-11-21 EJay - all element use box-sizing: border-box & new something css class
  v1.0.1 | 2016-11-21 EJay - Create Emmet CSS
  Copyright Â© 2016 Anyong Fintech Co., Ltd.
*/

@import './_mixin.scss';
@import './_variable.scss';
@import './_reset.scss';
* {
  box-sizing: border-box;
}

textarea,
input {
  &:focus {
    outline: none;
  }
}

a {
  color: inherit;
  text-decoration: none;
  outline: none;
  &:hover {
    text-decoration: none;
  }
}

html,
body {
  display: block;
  width: 100%;
  height: 100%;
  position: relative;
  margin: 0em;
  border: none;
}

.curp {
  cursor: pointer;
}

.curd {
  cursor: default;
}

.curt {
  cursor: text;
}

.curc {
  cursor: crosshair;
}

.curhe {
  cursor: help;
}

.curm {
  cursor: move;
}

.curnd {
  cursor: no-drop;
}

.curna {
  cursor: not-allowed
}

.curpg {
  cursor: progress;
}

.curw {
  cursor: wait;
}

.curn {
  cursor: none;
}

.currr {
  cursor: row-resize;
}

.curcr {
  cursor: col-resize;
}

.curcm {
  cursor: context-menu;
}

.curcp {
  cursor: copy;
}

.curce {
  cursor: cell;
}

.curwr {
  cursor: w-resize;
}

.curer {
  cursor: e-resize;
}

.curnr {
  cursor: n-resize;
}

.curswr {
  cursor: sw-resize
}

.curser {
  cursor: se-resize;
}

.curnwr {
  cursor: ne-resize;
}

.curner {
  cursor: nw-resize;
}

.curzi {
  cursor: zoom-in;
}

.curzo {
  cursor: zoom-out;
}

.curg {
  cursor: grab;
}

.curgb {
  cursor: grabbing;
}

.vv {
  visibility: visible;
}

.vh {
  visibility: hidden;
}

.vc {
  visibility: collapse;
}

.bdn {
  border: none;
}

.mgn {
  margin: 0em;
}

.pdn {
  padding: 0em;
}

.dpib,
.dib {
  display: inline-block;
}

.mn,
.db,
.dpb {
  display: block;
}

.dn,
.dpn {
  display: none;
}

.clr,
.clrb,
.clb {
  clear: both;
}

.clrr {
  clear: right;
}

.clrl {
  clear: left;
}

.fl {
  float: left;
}

.fr {
  float: right;
}

.vam {
  vertical-align: middle;
}

.vat {
  vertical-align: top;
}

.vab {
  vertical-align: bottom;
}

.vatt {
  vertical-align: text-top;
}

.vatb {
  vertical-align: text-bottom;
}

.tac {
  text-align: center;
}

.tar {
  text-align: right;
}

.tal {
  text-align: left;
}

.taj {
  text-align: justify;
}

.bxz,
.bx,
.bxzbb {
  box-sizing: border-box;
}

.ovh {
  overflow: hidden;
}

.ovxh {
  overflow-x: hidden;
}

.ovyh {
  overflow-y: hidden;
}

.ovxa {
  overflow-x: auto;
}

.ovya {
  overflow-y: auto;
}

.ova {
  overflow: auto;
}

.posa {
  position: absolute;
}

.posr {
  position: relative;
}

.posf {
  position: fixed;
}

.full {
  width: 100%;
  height: 100%;
}

.fh {
  height: 100%;
}

.fw {
  width: 100%;
}

.bold {
  font-weight: bold;
}

// ---- flex
.df,
.dfr,
.flex-row,
.frow {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: flex-start;
}

.dfc,
.fcol,
.flex-col,
.flex-column {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
}

.fae,
.flex-align-end {
  display: flex;
  align-items: flex-end;
}

.fac,
.flex-align-center {
  display: flex;
  align-items: center;
}

.fs,
.flex-stretch {
  display: flex;
  align-items: stretch;
}

.fb,
.flex-baseline {
  display: flex;
  align-items: baseline;
}

.frv,
.flex-reverse {
  display: flex;
  flex-direction: row-reverse;
}

.fcr,
.flex-column-reverse {
  display: flex;
  flex-direction: column-reverse;
}

.fje,
.flex-justify-end {
  display: flex;
  justify-content: flex-end;
}

.fjc,
.flex-justify-center {
  display: flex;
  justify-content: center;
}

.fsb,
.flex-space-between {
  display: flex;
  justify-content: space-between;
}

.fsa,
.flex-space-around {
  display: flex;
  justify-content: space-around;
}

@for $i from 1 through 20 {
  .f#{$i},
  .flex#{$i},
  .flex-#{$i},
  {
    flex: $i;
  }
  .ord#{$i},
  .ord-#{$i} {
    order: $i;
  }
}

.ord,
.ord0,
.ord-0 {
  order: 0;
}

.wown {
  word-wrap: none;
}

.wownm {
  word-spacing: normal;
}

.wowb {
  word-wrap: break-word;
}

.omit,
.omitContent {
  @include omitContent;
}

.pea {
  pointer-events: auto;
}

.pen {
  pointer-events: none;
}

.top {
  top: 0%;
}

.top-full,
.topf {
  top: 100%;
}

.bottom {
  bottom: 0%;
}

.bottom-full,
.bottomf {
  bottom: 100%;
}

.left {
  left: 0%;
}

.left-full,
.leftf {
  left: 100%;
}

.right {
  right: 0%;
}

.right-full,
.rightf {
  right: 100%;
}

.posa-center,
.posa-c {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@for $i from 1 through length($color-dark) {
  .c-dark-#{$i},
  .c-dk-#{$i} {
    color: nth($color-dark, $i);
  }
  .bgc-dark-#{$i},
  .bgc-dk-#{$i} {
    background-color: nth($color-dark, $i);
  }
  .c-light-#{$i},
  .c-lt-#{$i} {
    color: nth($color-light, $i);
  }
  .bgc-light-#{$i},
  .bgc-lt-#{$i} {
    background-color: nth($color-light, $i);
  }
}

@for $i from 1 through length($color-flat) {
  .c-flat-#{$i} {
    color: nth($color-flat, $i);
  }
  .bgc-flat-#{$i} {
    background-color: nth($color-flat, $i);
  }
}